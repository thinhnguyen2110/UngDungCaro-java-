/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carochess;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Image;
import java.util.StringTokenizer;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Thu
 */
public class PVsC extends javax.swing.JFrame {

    int Cot,Hang;
    int SoLuongCot[]={5,10,15};
    int SoLuongHang[]={5,10,15};
    JButton quanCo[][];    
    boolean ODaDi[][];
    boolean Luot;
    int DiLaiX[]=new int[Hang*Cot];
    int diLaiY[]=new int[Hang*Cot];
    int soBuocDi=0;
    int nguoiDiDauTien;
    int soOTrenBanCo;
    ImageIcon iconX,iconO;
    Minimax ai;
    int arr[][];
    
    /**
     * Creates new form PVsC
     */

    public PVsC() {
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);
        this.setTitle("caro");
        this.Hang=5;
        this.Cot=5;
        this.Luot=true;        
        this.nguoiDiDauTien=0;
        this.soOTrenBanCo=0;
        arr=new int[Hang+2][Cot+2];
        this.quanCo=new JButton[Hang+2][Cot+2];
        this.ODaDi=new boolean[Hang+2][Cot+2];
        this.DiLaiX=new int[Hang*Cot];
        this.diLaiY=new int[Hang*Cot];;  
        this.PFirst.setEnabled(false);
        ai=new Minimax(this);        
        int y=jPanel2.getHeight()/Hang;int x=jPanel2.getWidth()/Cot;
        iconX = new ImageIcon(new ImageIcon("x.png").getImage().getScaledInstance(x, y, Image.SCALE_DEFAULT));
        iconO = new ImageIcon(new ImageIcon("o.jpg").getImage().getScaledInstance(x, y, Image.SCALE_DEFAULT));
        veBanco(Hang,Cot); 
        
        
    }
    public PVsC (String title,int Hang,int Cot, boolean Luot,int nguoiDiDauTien,int soOTrenBanCo) {       
        super(title);
        initComponents();  
        this.pack();
        this.setLocationRelativeTo(null);
        this.Hang=Hang;
        this.Cot=Cot;
        this.Luot=true;
        this.nguoiDiDauTien=nguoiDiDauTien;        
        this.soOTrenBanCo=soOTrenBanCo;
        this.quanCo=new JButton[Hang+2][Cot+2];
        this.ODaDi=new boolean[Hang+2][Cot+2];
        this.DiLaiX=new int[Hang*Cot];
        this.diLaiY=new int[Hang*Cot];        
        ai=new Minimax(this);
        arr=new int[Hang+2][Cot+2];
        int y=jPanel2.getHeight()/Hang;int x=jPanel2.getWidth()/Cot;
        iconX = new ImageIcon(new ImageIcon("x.png").getImage().getScaledInstance(x, y, Image.SCALE_DEFAULT));
        iconO = new ImageIcon(new ImageIcon("o.jpg").getImage().getScaledInstance(x, y, Image.SCALE_DEFAULT));
        veBanco(this.Hang,this.Cot);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        undobtn = new javax.swing.JButton();
        CellChoose = new javax.swing.JComboBox<>();
        PFirst = new javax.swing.JButton();
        CFirst = new javax.swing.JButton();
        backtoscreen = new javax.swing.JButton();
        Newgame = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(900, 800));
        jPanel1.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));

        undobtn.setBackground(new java.awt.Color(255, 255, 51));
        undobtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        undobtn.setText("Đi lại");
        undobtn.setEnabled(false);
        undobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undobtnActionPerformed(evt);
            }
        });

        CellChoose.setBackground(new java.awt.Color(255, 255, 51));
        CellChoose.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        CellChoose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5x5", "10x10" }));
        CellChoose.setToolTipText("");
        CellChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CellChooseActionPerformed(evt);
            }
        });

        PFirst.setBackground(new java.awt.Color(255, 255, 51));
        PFirst.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        PFirst.setText("Người");
        PFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PFirstActionPerformed(evt);
            }
        });

        CFirst.setBackground(new java.awt.Color(255, 255, 51));
        CFirst.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        CFirst.setText("Máy");
        CFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CFirstActionPerformed(evt);
            }
        });

        backtoscreen.setBackground(new java.awt.Color(255, 255, 51));
        backtoscreen.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        backtoscreen.setText("Trở về màn hình");
        backtoscreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backtoscreenActionPerformed(evt);
            }
        });

        Newgame.setBackground(new java.awt.Color(255, 255, 51));
        Newgame.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Newgame.setText("Chơi lại");
        Newgame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewgameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel1.setText("Số ô cờ:");

        exit.setBackground(new java.awt.Color(255, 255, 51));
        exit.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        exit.setText("Thoát");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Đi trước:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CellChoose, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(PFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backtoscreen, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(undobtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Newgame, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Newgame, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(undobtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CellChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(backtoscreen, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(655, 0, 190, 650);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 648, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 650, 650);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 848, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CellChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CellChooseActionPerformed
        // TODO add your handling code here:
        int i=CellChoose.getSelectedIndex();
        if(this.soOTrenBanCo!=i){
            this.soOTrenBanCo=i;                      
            int soCotMoi=SoLuongCot[i];
            int soHangMoi=SoLuongHang[i];
            PVsC newgame= new PVsC("caro", soHangMoi, soCotMoi,true,nguoiDiDauTien,i);
            newgame.setVisible(true);                       
            newgame.CellChoose.setSelectedIndex(i);
            if(nguoiDiDauTien==1){                                
                int a,b;
                a=newgame.Hang/2+1;b=newgame.Cot/2+1;
                newgame.addPoint(a, b);
                newgame.CFirst.setEnabled(false);
                newgame.PFirst.setEnabled(true);
                newgame.arr[a][b]=2;
            }
            else {
                newgame.CFirst.setEnabled(true);
                newgame.PFirst.setEnabled(false);
            }
            this.dispose();
        }
    }//GEN-LAST:event_CellChooseActionPerformed

    private void PFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PFirstActionPerformed
        // TODO add your handling code here:

        if(this.nguoiDiDauTien!=0){
            this.nguoiDiDauTien=0;            
            PVsC newgame= new PVsC("caro", Hang, Cot,true,nguoiDiDauTien,soOTrenBanCo);
            newgame.setVisible(true);            
            newgame.CellChoose.setSelectedIndex(soOTrenBanCo);
            newgame.PFirst.setEnabled(false);
            newgame.CFirst.setEnabled(true);           
            this.dispose();
       }
    }//GEN-LAST:event_PFirstActionPerformed

    private void CFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CFirstActionPerformed
        // TODO add your handling code here:
        if(this.nguoiDiDauTien==0){
            this.nguoiDiDauTien=1;            
            PVsC newgame= new PVsC("caro", Hang, Cot,true,nguoiDiDauTien,soOTrenBanCo);
            newgame.setVisible(true);            
            newgame.CellChoose.setSelectedIndex(soOTrenBanCo);            
            int a,b;
            a=Hang/2+1;b=Cot/2+1;
            newgame.addPoint(a,b);
            newgame.CFirst.setEnabled(false);
            newgame.PFirst.setEnabled(true);
            newgame.arr[a][b]=2;
            this.dispose();
        }
    }//GEN-LAST:event_CFirstActionPerformed

    private void undobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undobtnActionPerformed
        // TODO add your handling code here:
        undo();
        undo();
    }//GEN-LAST:event_undobtnActionPerformed

    private void backtoscreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backtoscreenActionPerformed
        // TODO add your handling code here:
        new LOGIN().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backtoscreenActionPerformed

    private void NewgameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewgameActionPerformed
        // TODO add your handling code here:
        PVsC newgame =new PVsC("Caro Play Vs Computer", Hang, Cot, true, nguoiDiDauTien,soOTrenBanCo);
        newgame.CellChoose.setSelectedIndex(soOTrenBanCo);
        newgame.setVisible(true);
        if(nguoiDiDauTien==1){
        int a,b;
            a=Hang/2+1;b=Cot/2+1;
            newgame.addPoint(a, b);
            newgame.CFirst.setEnabled(false);
            newgame.PFirst.setEnabled(true);
            newgame.arr[a][b]=2;
        }
        else{newgame.CFirst.setEnabled(true);
            newgame.PFirst.setEnabled(false);}
        this.dispose();
    }//GEN-LAST:event_NewgameActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null,"Bạn có muốn thoát?")==JOptionPane.OK_OPTION)
            System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PVsC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PVsC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PVsC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PVsC.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PVsC().setVisible(true);
            }
        });
    }
     public void veBanco(int row,int col)
    {
        this.jPanel2.setLayout(new GridLayout(row,col));
        
        for(int i=0;i<=row+1;i++)
        {
            
            for(int j=0;j<=col+1;j++){
                arr[i][i]=0;
                quanCo[i][j]=new JButton("");
                quanCo[i][j].setActionCommand(i+","+j);
                quanCo[i][j].setBackground(new Color(255,255,204));
                quanCo[i][j].addActionListener(new java.awt.event.ActionListener() {
                    @Override
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        ActionPerformed(evt);
                        }
                });
            
            ODaDi[i][j] = true;
            }
        }
        for(int i=1;i<=row;i++)
            for(int j=1;j<=col;j++)
            jPanel2.add(quanCo[i][j]);
        jPanel2.updateUI();
    }
     public void addPoint(int i,int j)
    {        
        DiLaiX[soBuocDi]=i;
        diLaiY[soBuocDi]=j;
        soBuocDi++;
        if(Luot)
        {
//            quanCo[i][j].setText("X");
//            quanCo[i][j].setForeground(Color.red);
            quanCo[i][j].setIcon(iconX);
            arr[i][j]=1;
        }
        else
        {
//            quanCo[i][j].setText("O");
//            quanCo[i][j].setForeground(Color.blue);
            quanCo[i][j].setIcon(iconO);
            arr[i][j]=2;
        }
        ODaDi[i][j]=false;
        Luot^=true;
        undobtn.setEnabled(true);
        
        
    }
    public void undo()
    {
        if(soBuocDi>0){
            quanCo[DiLaiX[soBuocDi - 1]][diLaiY[soBuocDi - 1]].setIcon(null);
            quanCo[DiLaiX[soBuocDi - 1]][diLaiY[soBuocDi - 1]].setActionCommand(DiLaiX[soBuocDi - 1]+","+diLaiY[soBuocDi - 1]);
            arr[DiLaiX[soBuocDi-1]][diLaiY[soBuocDi-1]]=0;
            ODaDi[DiLaiX[soBuocDi-1]][diLaiY[soBuocDi-1]]=true;            
            soBuocDi--;
            if(soBuocDi==0) undobtn.setEnabled(false);
            
        }
    }
    public boolean kiemTraHoa(){
        return soBuocDi==(Hang*Cot);
    }
       public boolean kiemtraThangdoc(int [][]arr,int i,int j){
        int h = i,d = 0,demquanchan=0;
        while (arr[h][j]==arr[i][j]) {            
            d++;
            h++;
        }
        if(arr[h][j]!=arr[i][j]&&arr[h][j]!=0)
           demquanchan++;
        h=i-1;
        while (arr[h][j]==arr[i][j]) {            
            d++;
            h--;
        }
        if(arr[h][j]!=arr[i][j]&&arr[h][j]!=0)
            demquanchan++;
        if(demquanchan<2){
        if(d>4) return true;
        }
        return false;
    }
    public boolean kiemtraThangngang(int [][]arr,int i,int j){
        int d = 0, k,demquanchan=0;
        k=j;d=0;demquanchan=0;
        while (arr[i][k]==arr[i][j]) {            
            d++;
            k++;
        }
        if(arr[i][k]!=arr[i][j]&&arr[i][k]!=0)
            demquanchan++;
        k=j-1;
        while (arr[i][k]==arr[i][j]) {            
            d++;
            k--;
        }
        if(arr[i][k]!=arr[i][j]&&arr[i][k]!=0)
            demquanchan++;
        if(demquanchan<2){
        if(d>4) return true;
        }
        return false;
    }
    public boolean kiemtraThangcheo1(int [][]arr,int i,int j){
        int h = i,d = 0, k,demquanchan=0;
        h=i;k=j;d=0;demquanchan=0;
        while (arr[h][k]==arr[i][j]) {            
            d++;
            k++;
            h++;
        }
        if(arr[h][k]!=arr[i][j]&&arr[h][k]!=0)
            demquanchan++;
        h=i-1;k=j-1;
        while (arr[h][k]==arr[i][j]) {            
            d++;
            k--;
            h--;
        }
        if(arr[h][k]!=arr[i][j]&&arr[h][k]!=0)
            demquanchan++;
        if(demquanchan<2){
        if(d>4) return true;
        }
        return false;
    }
    public boolean kiemtraThangcheo2(int [][]arr,int i,int j){
        int h = i,d = 0, k,demquanchan=0;
        h=i;k=j;d=0;demquanchan=0;
        while (arr[h][k]==arr[i][j]) {            
            d++;
            h++;
            k--;
        }
        if(arr[h][k]!=arr[i][j]&&arr[h][k]!=0)
            demquanchan++;
        h=i-1;k=j+1;
        while (arr[h][k]==arr[i][j]) {            
            d++;
            h--;
            k++;
        }
        if(arr[h][k]!=arr[i][j]&&arr[h][k]!=0)
            demquanchan++;
        if(demquanchan<2){
        if(d>4) return true;
        }
        return false;
    }
    public int kiemtraThang(int arr[][],boolean turn)
    {
        for(int i=1;i<=Hang;i++){
            for(int j=1;j<=Cot;j++){
                if(arr[i][j]!=0) {
                    //kiem tra hang doc
                    if(kiemtraThangdoc(arr, i, j)){
                        if(turn) return 10;
                        if(!turn) return -10;
                    }
                    //kiem tra hang ngang
                    if (kiemtraThangngang(arr,i, j)){
                        if(turn) return 10;
                        if(!turn) return -10;
                    }
                    //kiem tra duong cheo 
                    if(kiemtraThangcheo1(arr,i, j)){
                        if(turn) return 10;
                        if(!turn) return -10;
                    }
                    //kiem tra duong cheo
                    if(kiemtraThangcheo2(arr,i, j)){
                        if(turn) return 10;
                        if(!turn) return -10;
                    }
                }
    
        }
        }
    return -1;
    }
   
    public void playWithComputer(int i,int j)
    {
         if (ODaDi[i][j]) {
            addPoint(i, j);
            if(kiemTraHoa()){
                for (i = 1; i <= Hang; i++)
                    for (j = 1; j <= Cot; j++)
                        quanCo[i][j].setEnabled(false);
                undobtn.setEnabled(false);               
                CFirst.setEnabled(false);
                PFirst.setEnabled(false);
                JOptionPane.showMessageDialog(this,"Hòa");                
            }
            else if(kiemtraThang(arr, true)==10){
                for (i = 1; i <= Hang; i++){
                   for (j = 1; j <= Cot; j++){
                       quanCo[i][j].setEnabled(false);}}
                   undobtn.setEnabled(false);                   
                   CFirst.setEnabled(false);
                   PFirst.setEnabled(false);
                   JOptionPane.showMessageDialog(this,"Bạn đã giành chiến thắng");     
            }
            else
            {            
                int move[]=ai.bestMove(arr,false,Integer.MIN_VALUE,Integer.MAX_VALUE);                                      
                addPoint(move[0],move[1]);
                    if(move[0]==0&&move[1]==0){
                        for (i = 1; i <= Hang; i++)
                                        for (j = 1; j <= Cot; j++)
                        quanCo[i][j].setEnabled(false);
                        undobtn.setEnabled(false);                        
                        CFirst.setEnabled(false);
                        PFirst.setEnabled(false);
                        JOptionPane.showMessageDialog(this, "Bạn đã thua");
                    }
                    else if(kiemTraHoa()){
                        for (i = 1; i <= Hang; i++)
                                        for (j = 1; j <= Cot; j++)
                        quanCo[i][j].setEnabled(false);
                        undobtn.setEnabled(false);                        
                        CFirst.setEnabled(false);
                        PFirst.setEnabled(false);
                        JOptionPane.showMessageDialog(this,"Hòa");                
                    }
                    else if(kiemtraThang(arr, false)==-10){
                        for (i = 1; i <= Hang; i++)
                                        for (j = 1; j <= Cot; j++)
                        quanCo[i][j].setEnabled(false);
                        undobtn.setEnabled(false);                        
                        CFirst.setEnabled(false);
                        PFirst.setEnabled(false);
                        JOptionPane.showMessageDialog(this, "Bạn đã thua");     
                    }
            }
        }
        
    }    
     private void ActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        
        String s = evt.getActionCommand();
        StringTokenizer stk= new StringTokenizer(s,",");
        int i = Integer.parseInt(stk.nextToken());
        int j = Integer.parseInt(stk.nextToken());
        playWithComputer(i, j);
       
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CFirst;
    private javax.swing.JComboBox<String> CellChoose;
    private javax.swing.JButton Newgame;
    private javax.swing.JButton PFirst;
    private javax.swing.JButton backtoscreen;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton undobtn;
    // End of variables declaration//GEN-END:variables
}
